#========================
@image.raw

vt0 = va0
vt0.xy *= vc3.xy			#frame
vt0.xy += vc3.zw

vt1.x = dp4: vt0, vc1		#world matrix
vt1.y = dp4: vt0, vc2

vt0.xy = vt1.xy * vc0.xy	#screen matrix
vt0.xy += vc0.zw
op = vt0

vt0.xy = va0 * vc4.xy			#uv matrix
vt0.xy += vc4.zw
v0 = vt0

ft0 = tex: v0, fs0<2d,nearest,clamp,${0}>
ft0 *= fc0
ft0 += fc1
ft1.x = ft0.w - fc27.x
kil: ft1.x
oc = ft0

#========================
@image<rgba>			${image.raw}
@image_dxt5<dxt5>		${image.raw}

ï»¿#========================
@texture.vs

vt0 = va0
vt0.xy *= vc1.xy
vt0.xy += vc1.zw
vt0.xy *= vc0.xy
vt0.xy += vc0.zw
op = vt0
v0 = va0

@texture
${texture.vs}
oc = tex: v0, fs0<clamp,nearest>
#========================
@blur

${texture.vs}
v1 = va0 - vc2.zw
v2 = va0 - vc2.xy
v3 = va0 + vc2.xy
v4 = va0 + vc2.zw

ft0 = tex: v0, fs0<clamp,linear>
ft1 = ft0 * fc0.x
ft0 = tex: v1, fs0<clamp,linear>
ft1 += ft0 * fc0.z
ft0 = tex: v2, fs0<clamp,linear>
ft1 += ft0 * fc0.y
ft0 = tex: v3, fs0<clamp,linear>
ft1 += ft0 * fc0.y
ft0 = tex: v4, fs0<clamp,linear>
oc = ft1 + ft0 * fc0.z

#========================
@color_matrix

${texture.vs}
ft0 = tex: v0, fs0<clamp,linear>
ft0 = m44: ft0, fc0
oc = ft0 + fc4
#========================