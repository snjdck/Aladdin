@g2d.vs
vt0 = va0
vt0.x = dp4: va0, vc0
vt0.y = dp4: va0, vc1
op = vt0

﻿#========================

@g2d.raw
${g2d.vs}
v0 = va1
v1 = va2
ft0 = tex: v0, fs0<clamp,${0}>
ft0 = mul: ft0, v1
ft1.x = ft0.w - fc0.x
kil:ft1.x
oc = ft0

#========================
@g2d<rgba>			${g2d.raw}
@g2d_dxt5<dxt5>		${g2d.raw}

#========================

@g2d_preDrawDepth
${g2d.vs}
oc = fc0

#========================

@g3d_preDrawDepth
vt0 = m44: va0, vc4	#世界矩阵
op = m44: vt0, vc0	#相机投影矩阵
oc = fc0

#========================

@bone_ani_pos.vs
#--bone-1
vt0.xyz = m34: va0, vc[va2.x]
vt1 = vt0.xyz * va2.y

#--bone-2
vt0.xyz = m34: va0, vc[va2.z]
vt1 += vt0.xyz * va2.w

#--bone-3
vt0.xyz = m34: va0, vc[va3.x]
vt1 += vt0.xyz * va3.y

#--bone-4
vt0.xyz = m34: va0, vc[va3.z]
vt1 += vt0.xyz * va3.w

#--bone-5
vt0.xyz = m34: va0, vc[va4.x]
vt1 += vt0.xyz * va4.y

#--bone-6
vt0.xyz = m34: va0, vc[va4.z]
vt1 += vt0.xyz * va4.w

#--bone-7
vt0.xyz = m34: va0, vc[va5.x]
vt1 += vt0.xyz * va5.y

#--bone-8
vt0.xyz = m34: va0, vc[va5.z]
vt1 += vt0.xyz * va5.w

#--bone-9
vt0.xyz = m34: va0, vc[va6.x]
vt1 += vt0.xyz * va6.y

#--bone-10
vt0.xyz = m34: va0, vc[va6.z]
vt1 += vt0.xyz * va6.w

#--bone-11
vt0.xyz = m34: va0, vc[va7.x]
vt1 += vt0.xyz * va7.y

#--bone-12
vt0.xyz = m34: va0, vc[va7.z]
vt1 += vt0.xyz * va7.w

vt1.w = va0

#===============================================================
@bone_ani_normal.vs
#--bone-1
vt0.xyz = m33: va1, vc[va2.x]
vt2 = vt0.xyz * va2.y

#--bone-2
vt0.xyz = m33: va1, vc[va2.z]
vt2 += vt0.xyz * va2.w

#--bone-3
vt0.xyz = m33: va1, vc[va3.x]
vt2 += vt0.xyz * va3.y

#--bone-4
vt0.xyz = m33: va1, vc[va3.z]
vt2 += vt0.xyz * va3.w

#--bone-5
vt0.xyz = m33: va1, vc[va4.x]
vt2 += vt0.xyz * va4.y

#--bone-6
vt0.xyz = m33: va1, vc[va4.z]
vt2 += vt0.xyz * va4.w

#--bone-7
vt0.xyz = m33: va1, vc[va5.x]
vt2 += vt0.xyz * va5.y

#--bone-8
vt0.xyz = m33: va1, vc[va5.z]
vt2 += vt0.xyz * va5.w

#--bone-9
vt0.xyz = m33: va1, vc[va6.x]
vt2 += vt0.xyz * va6.y

#--bone-10
vt0.xyz = m33: va1, vc[va6.z]
vt2 += vt0.xyz * va6.w

#--bone-11
vt0.xyz = m33: va1, vc[va7.x]
vt2 += vt0.xyz * va7.y

#--bone-12
vt0.xyz = m33: va1, vc[va7.z]
vt2 += vt0.xyz * va7.w

#===============================================================

@objectImp.agal
op = m44: vt1, vc0		#相机投影矩阵
v0 = va1				#uv

ft0 = tex: v0, fs0<>
ft1.x = ft0.w - fc0.x
kil:ft1.x
oc = ft0


@shadowImp.agal
op = m44: vt1, vc0		#相机投影矩阵
oc = fc0.zzzw


@wireframeImp.agal
vt0 = vc12
vt0.xyz = m33: vt0, vc8	#面向相机

vt0.xyz = crs: va1, vt0
vt0.xyz = nrm: vt0

vt1.xyz += vt0 * va1.w * vc12.w

op = m44: vt1, vc0	#相机投影矩阵
oc = fc1
#===============================================================

@bone_ani
${bone_ani_pos.vs}
vt1 = m44: vt1, vc4	#世界矩阵
${objectImp.agal}

@object
vt1 = m44: va0, vc4	#世界矩阵
${objectImp.agal}

@bone_ani_shadow
${bone_ani_pos.vs}
vt1 = m44: vt1, vc4	#世界矩阵
${shadowImp.agal}

@object_shadow
vt1 = m44: va0, vc4	#世界矩阵
${shadowImp.agal}

@bone_ani_wireframe
${bone_ani_pos.vs}
vt1 = m44: vt1, vc4	#世界矩阵
${wireframeImp.agal}

@object_wireframe
vt1 = m44: va0, vc4	#世界矩阵
${wireframeImp.agal}

#===============================================================
@particle
vt6.x = vc12.x - va1.w * va2.w	#当前时间 - startTime, va1.w表示粒子是总粒子中的第几个
vt6.y = vt6.x / va2.w	#t / lifetime
vt6.y = frc: vt6.y		#当前时间在生命周期中的比值
vt6.x = vt6.y * va2.w	#取余数后的时间

vt1 = vc12.z * va3 * vt6.x * vt6.x	#0.5 * a * t * t

vt0.xyz = va1 + vt1 + va2 * vt6.x	#va1=粒子中心点位置,加上v0 * t, 得到最终位置
vt0.w = vc12.y			#设置w为1

vt0 = m44: vt0, vc4		#世界矩阵,结果为粒子中心点坐标

vt1.z = va0.z + va0.w * vt6.y	#粒子尺寸
vt1.xy = va0.xy * vt1.z	#顶点偏移

vt1.z = vc12.z			#设置z为0
vt1.z += vc12.w

vt1.xyz = m33: vt1, vc8	#面向相机

vt0.xyz += vt1

op = m44: vt0, vc0		#相机投影矩阵

#纹理
#x:[-1, 1] - [0, 1] =>  0.5 * x + 0.5
#y:[1, -1] - [0, 1] => -0.5 * y + 0.5

v0 = va0 * vc12.zw + vc12.zz	#uv
v1 = va4 + va5 * vt6.y			#color
			
ft0 = tex: v0, fs0<>
ft0.xyz *= v1
oc = ft0