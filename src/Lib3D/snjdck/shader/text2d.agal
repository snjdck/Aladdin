#vc0 projection
#vc1 world transform for x
#vc2 world transform for y
#vc3 textureW, textureH, 0.5, 0

#va1 x, y, ux, uy
#va2 charW, charH, 0, 0

@text2d

vt0.xy = va0 * va2
vt0 = vt0.xyxy + va1
v0 = vt0.zw / vc3
vt0.zw = va0

${mvp2d.vs}

vt0.xz = va2.zzww * vc3.z
vt0.yw = frc: vt0.xxzz
vt0.xz = vt0 - vt0.yyww
vt0.yw = vt0.xxzz + vt0.xxzz
vt0.yw = va2.zzww - vt0.yyww
v1 = vt0

ft0 = tex: v0, fs0<2d,linear,clamp>
ft0.w = dp4: ft0, v1
ft0.xyz = fc0
oc = ft0